name: Build release
on: [push] 

jobs:
  debug:
    name: Create debug artifacts
    runs-on: ubuntu-latest
    container:
      image: alpine:latest
      env:
        GITHUB_REF: ${{ github.ref }}
        GITHUB_SHA: ${{ github.sha }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@master

      - name: Install dependencies
        run: |
          apk add alpine-sdk

      - name: Get versions
        id: versions
        run: |
          echo "branch=${GITHUB_REF#refs/*/}" >> "$GITHUB_OUTPUT"
          echo "commit=${GITHUB_SHA:0:10}" >> "$GITHUB_OUTPUT"

      - name: Building 0-db
        run: |
          cd libzdb
          make
          cd ..

          cd zdbd
          make STATIC=1
          cd ..

          make

      - name: Create archive
        run: |
          tar -czf threefoldtech-0-db-${{ steps.versions.outputs.branch }}-${{ steps.versions.outputs.commit }}.tar.gz bin

      - name: Publish flist (tf-autobuilder, ${{ steps.versions.outputs.commit }})
        uses: threefoldtech/publish-flist@master
        with:
          threefold: ${{ secrets.HUB_TOKEN }}
          action: upload
          name: threefoldtech-0-db-${{ steps.versions.outputs.branch }}-${{ steps.versions.outputs.commit }}.tar.gz

  release:
    name: Create release artifacts
    runs-on: ubuntu-latest
    container:
      image: alpine:latest
      env:
        GITHUB_REF: ${{ github.ref }}
        GITHUB_SHA: ${{ github.sha }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@master

      - name: Install dependencies
        run: |
          apk add alpine-sdk

      - name: Get versions
        id: versions
        run: |
          echo "branch=${GITHUB_REF#refs/*/}" >> "$GITHUB_OUTPUT"
          echo "commit=${GITHUB_SHA:0:10}" >> "$GITHUB_OUTPUT"

      - name: Building 0-db
        run: |
          cd libzdb
          make release
          cd ..

          cd zdbd
          make release STATIC=1
          cd ..

          make

      - name: Create archive
        run: |
          tar -czf threefoldtech-0-db-release-${{ steps.versions.outputs.branch }}-${{ steps.versions.outputs.commit }}.tar.gz bin

      - name: Publish flist (tf-autobuilder, ${{ steps.versions.outputs.commit }})
        if: success()
        uses: threefoldtech/publish-flist@master
        with:
          threefold: ${{ secrets.HUB_TOKEN }}
          action: upload
          name: threefoldtech-0-db-release-${{ steps.versions.outputs.branch }}-${{ steps.versions.outputs.commit }}.tar.gz

